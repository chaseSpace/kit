// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hello.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	common "hello/pb/gen-go/common"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FooRequest struct {
	BaseReq              *common.BaseReq `protobuf:"bytes,1,opt,name=base_req,json=baseReq,proto3" json:"base_req,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *FooRequest) Reset()         { *m = FooRequest{} }
func (m *FooRequest) String() string { return proto.CompactTextString(m) }
func (*FooRequest) ProtoMessage()    {}
func (*FooRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_61ef911816e0a8ce, []int{0}
}

func (m *FooRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooRequest.Unmarshal(m, b)
}
func (m *FooRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooRequest.Marshal(b, m, deterministic)
}
func (m *FooRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooRequest.Merge(m, src)
}
func (m *FooRequest) XXX_Size() int {
	return xxx_messageInfo_FooRequest.Size(m)
}
func (m *FooRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FooRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FooRequest proto.InternalMessageInfo

func (m *FooRequest) GetBaseReq() *common.BaseReq {
	if m != nil {
		return m.BaseReq
	}
	return nil
}

type FooReply struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FooReply) Reset()         { *m = FooReply{} }
func (m *FooReply) String() string { return proto.CompactTextString(m) }
func (*FooReply) ProtoMessage()    {}
func (*FooReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_61ef911816e0a8ce, []int{1}
}

func (m *FooReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FooReply.Unmarshal(m, b)
}
func (m *FooReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FooReply.Marshal(b, m, deterministic)
}
func (m *FooReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FooReply.Merge(m, src)
}
func (m *FooReply) XXX_Size() int {
	return xxx_messageInfo_FooReply.Size(m)
}
func (m *FooReply) XXX_DiscardUnknown() {
	xxx_messageInfo_FooReply.DiscardUnknown(m)
}

var xxx_messageInfo_FooReply proto.InternalMessageInfo

func init() {
	proto.RegisterType((*FooRequest)(nil), "pb.FooRequest")
	proto.RegisterType((*FooReply)(nil), "pb.FooReply")
}

func init() {
	proto.RegisterFile("hello.proto", fileDescriptor_61ef911816e0a8ce)
}

var fileDescriptor_61ef911816e0a8ce = []byte{
	// 165 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xce, 0x48, 0xcd, 0xc9,
	0xc9, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x48, 0x92, 0x12, 0x4e, 0xce, 0xcf,
	0xcd, 0xcd, 0xcf, 0xd3, 0x87, 0x50, 0x10, 0x09, 0x25, 0x13, 0x2e, 0x2e, 0xb7, 0xfc, 0xfc, 0xa0,
	0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x35, 0x2e, 0x8e, 0xa4, 0xc4, 0xe2, 0xd4, 0xf8, 0xa2,
	0xd4, 0x42, 0x09, 0x46, 0x05, 0x46, 0x0d, 0x6e, 0x23, 0x6e, 0xbd, 0x82, 0x24, 0x3d, 0xa7, 0xc4,
	0xe2, 0xd4, 0xa0, 0xd4, 0xc2, 0x20, 0xf6, 0x24, 0x08, 0x43, 0x89, 0x8b, 0x8b, 0x03, 0xac, 0xab,
	0x20, 0xa7, 0xd2, 0x48, 0x87, 0x8b, 0xd5, 0x03, 0x64, 0x93, 0x90, 0x32, 0x17, 0xb3, 0x5b, 0x7e,
	0xbe, 0x10, 0x1f, 0x48, 0x07, 0xc2, 0x4c, 0x29, 0x1e, 0x38, 0xbf, 0x20, 0xa7, 0xd2, 0x49, 0x3c,
	0x4a, 0x14, 0xec, 0x2e, 0xfd, 0x82, 0x24, 0xfd, 0xf4, 0xd4, 0x3c, 0xdd, 0x74, 0x10, 0xcb, 0xba,
	0x20, 0x29, 0x89, 0x0d, 0xec, 0x1e, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4b, 0x7d, 0x52,
	0xcb, 0xb7, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HelloClient is the client API for Hello service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloClient interface {
	Foo(ctx context.Context, in *FooRequest, opts ...grpc.CallOption) (*FooReply, error)
}

type helloClient struct {
	cc grpc.ClientConnInterface
}

func NewHelloClient(cc grpc.ClientConnInterface) HelloClient {
	return &helloClient{cc}
}

func (c *helloClient) Foo(ctx context.Context, in *FooRequest, opts ...grpc.CallOption) (*FooReply, error) {
	out := new(FooReply)
	err := c.cc.Invoke(ctx, "/pb.Hello/Foo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServer is the server API for Hello service.
type HelloServer interface {
	Foo(context.Context, *FooRequest) (*FooReply, error)
}

// UnimplementedHelloServer can be embedded to have forward compatible implementations.
type UnimplementedHelloServer struct {
}

func (*UnimplementedHelloServer) Foo(ctx context.Context, req *FooRequest) (*FooReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Foo not implemented")
}

func RegisterHelloServer(s *grpc.Server, srv HelloServer) {
	s.RegisterService(&_Hello_serviceDesc, srv)
}

func _Hello_Foo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FooRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServer).Foo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Hello/Foo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServer).Foo(ctx, req.(*FooRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Hello_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Hello",
	HandlerType: (*HelloServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Foo",
			Handler:    _Hello_Foo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "hello.proto",
}
